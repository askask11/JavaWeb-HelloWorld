/*Editor: Johnson Gao 
Date This File Created: 2020-1-25 20:10:29
Description Of This Class:
*/
/* 
    Created on : 2020-1-25, 20:10:29
    Author     : Johnson Gao
*/

/*basic settings*/

body
{
    color: #333333; 
    background-color: rgb(250,251,249); 
    /*background-image: url("../images//wood.jpg"); Photo by FWStudio from Pexels*/
    background-position: top; 
    font-family: Georgia, times, serif; 
    line-height: 1.4em; 
    margin: 0px;
    /*background-image: url("../images/background/animated-pattern.gif");*/
    background-size: 100%;
    background-repeat: no-repeat;
    /*background-position: center;*/
    margin: auto;
/*    border-image: url("../images/border1.png");
    border-image-repeat: repeat;
    border-image-width: 100%;*/
}

.inputBody, .resultBody
{
    margin-top: 20px;
}

.inputBody
{
    background-image: url(../images/inputBackground.jpg);
}

.indexBody
{
    background-image: url(../images/indexBackground.jpg);
}

.resultBody
{
    background-image: url(../images/resultBackground.jpg);
}


/*functional classes*/
/****** Buttton *********/

/*Give a button arrow like*/
.arrowbutton
{
    border-radius: 4px;
    background-color: #f4511e;
    border: none;
    color: #FFFFFF;
    text-align: center;
    font-size: 15px;
    padding: 10px;
    width: 150px;
    transition: all 0.5s;
    cursor: pointer;
    margin: 5px;
}


.arrowbutton span
{
    cursor: pointer;
    display: inline-block;
    position: relative;
    transition: 0.5s;
}

.arrowbutton span:after {
    content: '\00bb';
    position: absolute;
    opacity: 0;
    top: 0;
    right: -20px;
    transition: 0.5s;
}
.arrowbutton:hover span {/*this part will take place when user hovers over it!*/
    padding-right: 25px;
}

.arrowbutton:hover span:after {
    opacity: 1;
    right: 0;
}

/**********        ANIMATED TEXT CONTAINER  ******************/
.animated-text-input-container
{
    width: 50%;
    position: relative;
    height: 70px;
    overflow: hidden;
    text-align: left;
}

/*The container should behave differently when it is put into the table in order to fit inside.*/
table .animated-text-input-container
{
    width:100%;
}



.animated-text-input-container input
{
    /*set the size so the form fill out through the div.*/
    width: 100%;
    height: 100%;
    color: #595f6e;/*The text color in the form*/
    padding-top: 10px;/*The space between the line and the input area*/
    border: none;
    /*outline: none;*/
    background-color: inherit;/*So the form doesn't look weird, same color as background.*/

}

/*the positioning cannot be placed on the input itself, so we
format the label around the textfield*/
.animated-text-input-container label
{
    position: absolute;/*place it absolute so it covers the input*/
    bottom:0px;/*the distance on the bottom between it and its ancestor (.form)*/
    left:0%;/*the d from the left compate to its ancestor element*/
    width: 100%;/*the width of the underline*/
    height: 100%;/*the height of the label object we use to format the obj*/
    /*background: blue;/*inside*/
    pointer-events: none;/*so that the user doesn't click on the label itself.*/
    border-bottom: 1px solid black;/*it is the underline of the input*/
}

.animated-text-input-container label::after
{
    content:"";/*create a fake content after ward.*/
    position: absolute;
    /*left: -1px;*/
    bottom: 0px;
    height: 100%;
    width: 100%;
    border-bottom: 3px solid blue;
    transform: translateX(-100%);/*shift to the left for all of it.*/
    transition: transform 0.3s ease;/*take 0.3 s to */
}
.content-name
{
    position: absolute;/*Effect: when user click on it, the input start to take place, then the text would go up*/
    bottom: 5px;/*the distance of bottom between the text and its ancestor element(label)*/
    left: 0px;/*the distance of left size between the text and its ancestor element(label)*/
    transition: all 0.3s ease; /*except for the 0.3s,time of transit from the buttom to the top(as the input take place) by default.*/
}

.animated-text-input-container input:focus + .label-name .content-name ,/*when user click on it or when the textfield have some contents*/
.animated-text-input-container input:valid+ .label-name .content-name 
{
    transform: translateY(-150%);
    font-size: 14px;
    color: #9999ff;
}
.animated-text-input-container input:focus + .label-name::after , .animated-text-input-container input:valid + .label-name::after
{
    transform: translateX(0%);
}

/*         -----     */
/********************  POP UP CLASSES  ***********************/
/*         -----     */
/*define the entry of the pop up*/
/*SURROUND THE AREA WHERE TO SHOW POP UP!!!*/
.popup
{
    position: relative;/*SO IT CAN SHOW UP!!!*/
    display: inline-block;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

/*The area to be popped up*/
.popupArea
{
    visibility: hidden;/*Hide the text*/
    /*width: 60%;the width of the area*/
    background-color: #555;/*bg color*/
    color: #fff;/*txt color*/
    text-align: center;
    border-radius: 6px;
    padding: 8px 0;
    position: absolute;
    z-index: 1;/*overfly the button,set on top*/
    /*bottom: 7%;*/
    /*left: 50%;*/
    margin-left: 111%;
}

/*Hide/show the popup class*/
.popup .show {
    visibility: visible;
    -webkit-animation: fadeEffect 1s;
    animation: fadeEffect 1s;
}

.popup .popuptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
}


/*normal classes*/


/*ids*/
#audioIcon
{
    float:left;
    margin-top: 0px;
}
#mainSelectionTable
{
    margin-top: 47%;
    opacity: 0.8;
    animation: appear08;
    animation-delay: 0.3s;
    animation-duration: 1s;
}

#mainSelectionTable td
{
    padding-right: 15%;
    padding-left: 5%;
}

#mainSelectionTable .arrowbutton
{
    width: inherit;
    padding: inherit;
}

.indexVoice
{
    bottom: 7%;
}




/*PRIPRITY classes*/
.centralized
{
    margin: auto;
}

.centerText
{
    text-align: center;
}


.block
{
    display: block;
}

.greenBg
{
    background-color: #33ff33;
}

.pinkBg
{
    background-color: pink;
}

@keyframes fadeEffect
{
    from
    {
        //initial state : opacity: 0;
        opacity: 0;
    }to
    {
        opacity: 1;//ending state: opacity: 1;
    }
}@keyframes appear08
{
    from
    {
        //initial state : opacity: 0;
        opacity: 0;
    }to
    {
        opacity: 0.8;//ending state: opacity: 1;
    }
}